#include <bits/stdc++.h> 
using namespace std;
struct Node{
    int data;
    struct Node* ptr;
};

class Queue {
public:
    struct Node *frontt,*rear;
    Queue() {
        // Implement the Constructor
        frontt=NULL;
        rear=NULL;
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(rear==NULL) return(1);
        return(0);
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        struct Node* temp=(struct Node*)malloc(sizeof(struct Node));
        temp->data=data;
        temp->ptr=NULL;
        if(frontt==NULL){
            frontt=temp;
            rear=temp;
        }
        else{
            frontt->ptr=temp;
            frontt=temp;
        }
    }

    int dequeue() {
        // Implement the dequeue() function
        if(rear==NULL) return(-1);

        if(frontt==rear){
            int temp=frontt->data;
            frontt=NULL;
            rear=NULL;
            return(temp);
        }

        int temp=rear->data;
        rear=rear->ptr;
        return(temp);
    }

    int front() {
        // Implement the front() function
        if(rear==NULL) return(-1);
        return(rear->data);
    }
};
