/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL) return(NULL);
        ListNode* temp=head;
        int n=0;
        while(temp!=NULL){
            temp=temp->next;
            n++;
        }
        
        temp=head;
        k=k%n;
        if(k==0) return(head);
        k=n-k-1;
        while((k--)){
            temp=temp->next;
        }
        ListNode* temp1;
        temp1=temp->next;
        temp->next=NULL;
        temp=temp1;
        while(temp1->next!=NULL) temp1=temp1->next;

        temp1->next=head;
        return(temp);
    }
};
