/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
TreeNode* solve1(TreeNode* root){
        if(root->left==NULL && root->right==NULL){
            return(root);
        }
        TreeNode* temp=NULL,*temp1;

        if(root->left!=NULL) temp=solve1(root->left);
        if(temp!=NULL){
            temp1=temp;
            while(temp1->right!=NULL) temp1=temp1->right;
            temp1->right=root->right;
            root->right=temp;
            root->left=NULL;
        }
        return(root);
    }
    void flatten(TreeNode* root) {
        if(root==NULL) return;
        //root=solve1(root);
        TreeNode* temp=root;
        while(root!=NULL) {
            if(root->left!=NULL){
                root=solve1(root);
            }
            root=root->right;
        }root=temp;
    }
};
