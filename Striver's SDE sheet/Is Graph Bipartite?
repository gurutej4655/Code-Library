class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        
        int n=graph.size();
        int visited[n];
        for(int i=0;i<n;i++) visited[i]=0;       
        //int flag=-1;
        for(int i=0;i<graph.size();i++){
            queue<int> q;
            q.push(i);
            for(int i=0;i<n;i++) visited[i]=0;
        visited[i]=-1;

        while(!q.empty()){
            int cur=q.front();
            q.pop();
            
            for(auto i:graph[cur]){
                if(visited[i]==0) {
                    visited[i]=visited[cur]*(-1);
                    q.push(i);
                }
                else if(visited[i]==visited[cur]) return(false);
            }
        }
        }return(true);
    }
};
