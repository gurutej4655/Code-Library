
class Solution{
public:
    // Function to determine if graph can be coloured with at most M colours such
    // that no two adjacent vertices of graph are coloured with same colour.
    bool isSafe(bool graph[101][101],int *color, int n, int i,int k){
        for(int j=0;j<n;j++){
            if(graph[i][j]!=0){
                if(color[j]==k) return(false);
            }
        }return(true);
    }
    bool solve(bool graph[101][101],int *color,int i, int n, int m){
        if(i==n) return(true);
        
        for(int k=1;k<=m;k++){
            if(isSafe(graph,color,n,i,k)){
                color[i]=k;
                if(solve(graph,color,i+1,n,m)) return(true);
                else color[i]=0;
            }
        }return(false);
    }
    bool graphColoring(bool graph[101][101], int m, int n) {
        // your code here
        int color[m]={0};
        return(solve(graph,color,0,n,m));
    }
};
