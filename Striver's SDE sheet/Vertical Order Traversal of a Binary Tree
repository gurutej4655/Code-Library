/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode *root,map<int,map<int,multiset<int>>> &mp,int i,int j){
        if(root== NULL) return;

        mp[i][j].insert(root->val);
        if(root->left!=NULL) solve(root->left,mp,i-1,j+1);
        if(root->right!=NULL) solve(root->right,mp,i+1,j+1);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>> mp;
        vector<vector<int>> ans;

        solve(root,mp,0,0);
        for(auto k:mp){
            auto l=k.second;
            vector<int> temp;
            for(auto m:l) {
                auto mm=m.second;
                for(auto n:mm) temp.push_back(n);
            }
            ans.push_back(temp);
        }return(ans);
    }
};
