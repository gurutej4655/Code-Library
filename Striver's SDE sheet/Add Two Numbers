/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
ListNode* solve(ListNode* list1,ListNode* list2){
    ListNode* temp1=list1,*temp2=list2,*temp;
    int carry=0;

    while(temp1->next!=NULL && temp2->next!=NULL){
        int value=temp1->val+temp2->val+carry;
        temp1->val=value%10;
        carry=value/10;
        temp1=temp1->next;
        temp2=temp2->next;
    }
    int value=temp1->val+temp2->val+carry;
    temp1->val=value%10;
    carry=value/10;

    if(temp2->next==NULL){
        while(temp1->next!=NULL){
            temp1=temp1->next;
            value=temp1->val+carry;
            temp1->val=value%10;
            carry=value/10;
        }
    }
    else if(temp1->next==NULL){
        while(temp2->next!=NULL){
            temp2=temp2->next;
            value=temp2->val+carry;
            temp1->next=list2;
            list2->val=value%10;
            temp=list2->next;
            list2->next=NULL;
            list2=temp;
            temp1=temp1->next;
            carry=value/10;
        }
    }

    if(carry){
        list2->val=carry;
        list2->next=NULL;
        temp1->next=list2;
    }
    return(list1);
}
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        return(solve(l1,l2));        
    }
};
