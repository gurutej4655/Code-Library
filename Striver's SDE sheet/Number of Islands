class Solution {
public:
    void solve(vector<vector<char>> &grid,int i,int j,int n,int m){
        if(i+1<=n-1 && grid[i+1][j]=='1'){
            grid[i+1][j]='0';
            solve(grid,i+1,j,n,m);
        }
        if(j+1<=m-1 && grid[i][j+1]=='1'){
            grid[i][j+1]='0';
            solve(grid,i,j+1,n,m);
        }
        if(i-1>=0 && grid[i-1][j]=='1'){
            grid[i-1][j]='0';
            solve(grid,i-1,j,n,m);
        }
        if(j-1>=0 && grid[i][j-1]=='1'){
            grid[i][j-1]='0';
            solve(grid,i,j-1,n,m);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int ans=0,m=grid[0].size(),n=grid.size();
        for(int i=0;i<n;i++) for(int j=0;j<m;j++) if(grid[i][j]=='1') {
            grid[i][j]='0';
            solve(grid,i,j,n,m);
            ans++;
        }
        return(ans);        
    }
};
