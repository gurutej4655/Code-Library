class Solution {
public:
    int safe(vector<vector<char>>& board,int row,int col,char ch){
        int i=row,j=col;
        for(int k=0;k<9;k++){
            if(board[row][k]==ch) return(0);
            if(board[k][col]==ch) return(0);
            if(board[3*(row/3)+k/3][3*(col/3)+k%3]==ch) return(0);
        }
        return(1);
    }
    int solve(vector<vector<char>>& board) {
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.'){
                    for(char k='1';k<='9';k++){
                        if(safe(board,i,j,k)){
                        board[i][j]=k;
                        if(solve(board)) return(1);
                        else board[i][j]='.';
                    }
                    }
                    return(0);
                }
            }
        } return(1);
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);       
    }
};
