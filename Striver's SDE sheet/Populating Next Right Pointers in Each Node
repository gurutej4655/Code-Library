/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    void solve(Node* root1,Node* root2){
        if(root1==NULL) return;

        root1->next=root2;
        solve(root1->right,root2->left);
    }
    Node* connect(Node* root) {
        if(root==NULL) return(root);

        stack<Node*> st;
        Node* temp=root;
        st.push(root);
        while(!st.empty()){
            root=st.top();
            st.pop();
            if(root->left==NULL && root->right==NULL) continue;
            solve(root->left,root->right);
            st.push(root->right);
            st.push(root->left);
        }  return(temp);      
    }
};
