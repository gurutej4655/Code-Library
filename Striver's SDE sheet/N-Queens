class Solution {
public:
    int solve1(vector<string> &ans1,int i,int j,int n){
        int x=i,y=j;
        while(i>=0 && j<n){
            if(ans1[j][i]!='.') return(0);
            i--;
            j++;
        }
        i=x;j=y;
        for(i=0;i<=x;i++) if(ans1[j][i]!='.') return(0);
        i=x;
        while(i>=0 && j>=0){
            if(ans1[j][i]!='.') return(0);
            i--;
            j--;
        }
        return(1);
    }
    void solve(vector<vector<string>> &ans,vector<string> &ans1,int i,int n){
        if(i==n){
            ans.push_back(ans1);
            return;
        }

        for(int j=0;j<n;j++){
            if(solve1(ans1,i,j,n)){
                ans1[j][i]='Q';
                solve(ans,ans1,i+1,n);
                ans1[j][i]='.';
            }
        }
    }
    vector<vector<string>> solveNQueens(int n) {
        vector<vector<string>> ans;
        vector<string> ans1(n);
        string s(n,'.');
        for(int i=0;i<n;i++) ans1[i]=s;

        solve(ans,ans1,0,n);
        return(ans);    
    }
};N-Queens
