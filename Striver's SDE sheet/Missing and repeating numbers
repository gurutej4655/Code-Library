#include <bits/stdc++.h> 
#include <bits/stdc++.h> 

pair<int,int> missingAndRepeating(vector<int> &A, int n)
{
	int xorr=0;
    for(int i=0;i<n;i++) xorr=xorr^A[i];
	for(int i=1;i<=n;i++) xorr=xorr^i;
    
    xorr=(int)(log(xorr)/log(2)); // xorr = xorr ^ (~(xorr-1))
    xorr=pow(2,xorr);
    int a=0,b=0;
    for(int i=0;i<n;i++){
		
        if((xorr&A[i])==0) b=b^A[i];
        else a=a^A[i];
    }
    
    for(int i=1;i<=n;i++){
        if((xorr&i)==0) b=b^i;
        else a=a^i;
    }

int i;
	for(i=0;i<n;i++){
		if(A[i]==a){
			break;
		}
	}
	if(i==n) swap(a,b);
    pair<int,int> ans;
    ans.first=b;
    ans.second=a;
    return(ans);
	
}

