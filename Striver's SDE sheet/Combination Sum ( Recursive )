class Solution {
public:
    void solve(vector<int>& candidates,vector<vector<int>> &ans,vector<int> &ans1,int i,int n,int target){
        if(i==n){
            if(target==0) ans.push_back(ans1);
            return;
        }

        if(candidates[i]<=target){
            ans1.push_back(candidates[i]);
            solve(candidates,ans,ans1,i,n,target-candidates[i]);
            ans1.pop_back();
        }
        solve(candidates,ans,ans1,i+1,n,target);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ans1;
        solve(candidates,ans,ans1,0,candidates.size(),target);
        return(ans);
    }
};
