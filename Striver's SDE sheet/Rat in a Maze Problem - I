
class Solution{
    public:
    void solve(vector<vector<int>> &m, int n,int i,int j,vector<string> &ans,string s){
        if(i==n-1 && j==n-1){
            ans.push_back(s);
            return;
        }
        
        if(i+1<n && m[i+1][j]==1){
            m[i][j]=0;
            solve(m,n,i+1,j,ans,s+'D');
            m[i][j]=1;
        }
        if(i-1>=0 && m[i-1][j]==1){
            m[i][j]=0;
            solve(m,n,i-1,j,ans,s+'U');
            m[i][j]=1;
        }if(j+1<n && m[i][j+1]==1){
            m[i][j]=0;
            solve(m,n,i,j+1,ans,s+'R');
            m[i][j]=1;
        }if(j-1>=0 && m[i][j-1]==1){
            m[i][j]=0;
            solve(m,n,i,j-1,ans,s+'L');
            m[i][j]=1;
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        string s="";
        if(m[0][0]==1) solve(m,n,0,0,ans,s);
        return(ans);
    }
};
