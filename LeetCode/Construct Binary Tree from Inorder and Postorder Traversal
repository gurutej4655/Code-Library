/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        
    // }
    TreeNode* func(int l,int h,vector<int>& po, vector<int>& in,int &i){
        if(l>h) return(NULL);
        i--;
        TreeNode* root=new TreeNode();
        root->val=po[i];
        int mid=l;
        while(in[mid]!=po[i]) mid++;
        
        root->right=func(mid+1,h,po,in,i);
        root->left=func(l,mid-1,po,in,i);
        
        return(root);

    }
    TreeNode* buildTree(vector<int>& in, vector<int>& po) {
        int i=po.size();
        return(func(0,i-1,po,in,i));
    }
};
