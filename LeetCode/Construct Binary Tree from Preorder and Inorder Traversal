/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* func(int l,int h,vector<int>& pre, vector<int>& in,int &i){
        if(l>h) return(NULL);
        i++;
        TreeNode* root=new TreeNode();
        root->val=pre[i];
        int mid=l;
        while(in[mid]!=pre[i]) mid++;

        root->left=func(l,mid-1,pre,in,i);
        root->right=func(mid+1,h,pre,in,i);
        return(root);

    }
    TreeNode* buildTree(vector<int>& pre, vector<int>& in) {
        int i=-1;
        return(func(0,pre.size()-1,pre,in,i));
    }
};
