/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(vector<vector<int>> & ans,vector<int> &ans1,TreeNode *root,int sum){
        if(root!=NULL && root->left==NULL && root->right==NULL){
            if(sum==root->val) {
                ans1.push_back(sum);
                ans.push_back(ans1);
                ans1.pop_back();
            }
            return;
        }

        if(root!=NULL){
            ans1.push_back(root->val);
            func(ans,ans1,root->left,sum-root->val);
            func(ans,ans1,root->right,sum-root->val);
            ans1.pop_back();
        }
    }
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<int> ans1;
        vector<vector<int>> ans;
        if(root==NULL) return(ans);
        else func(ans,ans1,root,sum);
        return(ans);
    }
};
